name: dockercompose3432824561139095138
services:
  db:
    environment:
      POSTGRES_DB: CarCompanyDb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      CarCompany: null
    restart: always
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
        volume: {}
  maintz.authservice:
    build:
      context: C:\Users\Иван\Documents\GitHub\MainTzProject
      dockerfile: MainTz.AuthApi/Dockerfile
    image: authservice
    networks:
      CarCompany: null
    restart: always
  maintz.restapi:
    build:
      context: C:\Users\Иван\Documents\GitHub\MainTzProject
      dockerfile: MainTz.RestApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: maintzrestapi
    networks:
      CarCompany: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\Иван\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Иван\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  CarCompany:
    name: dockercompose3432824561139095138_CarCompany
volumes:
  pgdata:
    name: dockercompose3432824561139095138_pgdata